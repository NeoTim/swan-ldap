{
  "api/Swan.Ldap.LdapAttribute.html": {
    "href": "api/Swan.Ldap.LdapAttribute.html",
    "title": "Class LdapAttribute | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapAttribute The name and values of one attribute of a directory entry. LdapAttribute objects are used when searching for, adding, modifying, and deleting attributes from the directory. LdapAttributes are often used in conjunction with an LdapAttributeSet when retrieving or adding multiple attributes to an entry. Inheritance Object LdapAttribute Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapAttribute Constructors LdapAttribute(String) Initializes a new instance of the LdapAttribute class. Constructs an attribute with no values. Declaration public LdapAttribute(string attrName) Parameters Type Name Description String attrName Name of the attribute. Exceptions Type Condition ArgumentException Attribute name cannot be null. LdapAttribute(String, String) Initializes a new instance of the LdapAttribute class. Constructs an attribute with a single String value. Declaration public LdapAttribute(string attrName, string attrString) Parameters Type Name Description String attrName Name of the attribute. String attrString Value of the attribute as a string. Exceptions Type Condition ArgumentException Attribute value cannot be null. Properties ByteValue Returns the first value of the attribute as a byte array or null. Declaration public sbyte[] ByteValue { get; } Property Value Type Description SByte [] The byte value. ByteValueArray Returns the values of the attribute as an array of bytes. Declaration public sbyte[][] ByteValueArray { get; } Property Value Type Description SByte [][] The byte value array. LangSubtype Returns the language subtype of the attribute, if any. For example, if the attribute name is cn;lang-ja;phonetic, this method returns the string, lang-ja. Declaration public string LangSubtype { get; } Property Value Type Description String The language subtype. Name Returns the name of the attribute. Declaration public string Name { get; } Property Value Type Description String The name. StringValue Returns the the first value of the attribute as an UTF-8 string. Declaration public string StringValue { get; } Property Value Type Description String The string value. StringValueArray Returns the values of the attribute as an array of strings. Declaration public string[] StringValueArray { get; } Property Value Type Description String [] The string value array. Methods AddBase64Value(Char[]) Adds a base64 encoded value to the attribute. The value will be decoded and stored as bytes. Character data encoded as a base64 value must be UTF-8 characters. Declaration public void AddBase64Value(char[] attrChars) Parameters Type Name Description Char [] attrChars The base64 value of the attribute as an array of characters. Exceptions Type Condition ArgumentNullException attrChars. AddBase64Value(String) Adds a base64 encoded value to the attribute. The value will be decoded and stored as bytes. String data encoded as a base64 value must be UTF-8 characters. Declaration public void AddBase64Value(string attrString) Parameters Type Name Description String attrString The base64 value of the attribute as a String. Exceptions Type Condition ArgumentException Attribute value cannot be null. AddBase64Value(StringBuilder, Int32, Int32) Adds a base64 encoded value to the attribute. The value will be decoded and stored as bytes. Character data encoded as a base64 value must be UTF-8 characters. Declaration public void AddBase64Value(StringBuilder attrString, int start, int end) Parameters Type Name Description StringBuilder attrString The base64 value of the attribute as a StringBuffer. Int32 start The start index of base64 encoded part, inclusive. Int32 end The end index of base encoded part, exclusive. Exceptions Type Condition ArgumentNullException attrString. AddValue(SByte[]) Adds a byte-formatted value to the attribute. Declaration public void AddValue(sbyte[] attrBytes) Parameters Type Name Description SByte [] attrBytes Value of the attribute as raw bytes. Note: If attrBytes represents a string it should be UTF-8 encoded. Exceptions Type Condition ArgumentException Attribute value cannot be null. AddValue(String) Adds a String value to the attribute. Declaration public void AddValue(string attrString) Parameters Type Name Description String attrString Value of the attribute as a String. Exceptions Type Condition ArgumentException Attribute value cannot be null. Clone() Clones this instance. Declaration public LdapAttribute Clone() Returns Type Description LdapAttribute A cloned instance. CompareTo(Object) Compares this object with the specified object for order. Ordering is determined by comparing attribute names using the method Compare() of the String class. Declaration public int CompareTo(object attribute) Parameters Type Name Description Object attribute The LdapAttribute to be compared to this object. Returns Type Description Int32 Returns a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. GetBaseName() Returns the base name of the attribute. For example, if the attribute name is cn;lang-ja;phonetic, this method returns cn. Declaration public string GetBaseName() Returns Type Description String The base name of the attribute. GetBaseName(String) Returns the base name of the specified attribute name. For example, if the attribute name is cn;lang-ja;phonetic, this method returns cn. Declaration public static string GetBaseName(string attrName) Parameters Type Name Description String attrName Name of the attribute from which to extract the base name. Returns Type Description String The base name of the attribute. Exceptions Type Condition ArgumentException Attribute name cannot be null. GetSubtypes() Extracts the subtypes from the attribute name. For example, if the attribute name is cn;lang-ja;phonetic, this method returns an array containing lang-ja and phonetic. Declaration public string[] GetSubtypes() Returns Type Description String [] An array subtypes or null if the attribute has none. GetSubtypes(String) Extracts the subtypes from the specified attribute name. For example, if the attribute name is cn;lang-ja;phonetic, this method returns an array containing lang-ja and phonetic. Declaration public static string[] GetSubtypes(string attrName) Parameters Type Name Description String attrName Name of the attribute from which to extract the subtypes. Returns Type Description String [] An array subtypes or null if the attribute has none. Exceptions Type Condition ArgumentException Attribute name cannot be null. HasSubtype(String) Reports if the attribute name contains the specified subtype. For example, if you check for the subtype lang-en and the attribute name is cn;lang-en, this method returns true. Declaration public bool HasSubtype(string subtype) Parameters Type Name Description String subtype The single subtype to check for. Returns Type Description Boolean True, if the attribute has the specified subtype; false, if it doesn't. Exceptions Type Condition ArgumentNullException subtype. HasSubtypes(String[]) Reports if the attribute name contains all the specified subtypes. For example, if you check for the subtypes lang-en and phonetic and if the attribute name is cn;lang-en;phonetic, this method returns true. If the attribute name is cn;phonetic or cn;lang-en, this method returns false. Declaration public bool HasSubtypes(string[] subtypes) Parameters Type Name Description String [] subtypes An array of subtypes to check for. Returns Type Description Boolean True, if the attribute has all the specified subtypes; false, if it doesn't have all the subtypes. Exceptions Type Condition ArgumentNullException subtypes. ArgumentException subtype at array index {i}. RemoveValue(SByte[]) Removes a byte-formatted value from the attribute. Declaration public void RemoveValue(sbyte[] attrBytes) Parameters Type Name Description SByte [] attrBytes Value of the attribute as raw bytes. Note: If attrBytes represents a string it should be UTF-8 encoded. Note: Removing a value which is not present in the attribute has no effect. Exceptions Type Condition ArgumentNullException attrBytes. RemoveValue(String) Removes a string value from the attribute. Declaration public void RemoveValue(string attrString) Parameters Type Name Description String attrString Value of the attribute as a string. Note: Removing a value which is not present in the attribute has no effect. Size() Returns the number of values in the attribute. Declaration public int Size() Returns Type Description Int32 The number of values in the attribute. ToString() Returns a string representation of this LdapAttribute. Declaration public override string ToString() Returns Type Description String a string representation of this LdapAttribute. Overrides Object.ToString() Exceptions Type Condition Exception NullReferenceException. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "README.html": {
    "href": "README.html",
    "title": "SWAN: Stuff We All Need - LDAP Client | Unosquare SWAN LDAP Client",
    "keywords": "SWAN: Stuff We All Need - LDAP Client SWAN LDAP Client was previously included as part of the main SWAN project, but since there is not too much products using an LDAP Client we removed as standalone library. ⭐ Please star this project if you find it useful! SWAN stands for Stuff We All Need Repeating code and reinventing the wheel is generally considered bad practice. At Unosquare we are committed to beautiful code and great software. Swan is a collection of classes and extension methods that we (and other good developers) have written and evolved over the years. We found ourselves copying and pasting the same code for every project every time we started them. We decided to kill that cycle once and for all. This is the result of that idea. Our philosophy is that Swan should have no external dependencies, it should be cross-platform, and it should be useful. Installation: PM> Install-Package Unosquare.Swan.Ldap The LDAPConnection class The Lightweight Directory Access Protocol or LDAP is a network protocol for querying and modifying items in directory service providers like Active Directory which provide a systematic set of records organized in a hierarchical structure. Active Directory stores information about users, computers, groups and other objects that are part of a domain . LdapConnection API Doc Operations LDAP has a couple of operations that can be executed Bind : binds the current connection to a set of credentials Unbind or Disconnect : signals the server that the connection is about to close then the server proceeds to close the connection to the client Modify : this operation is used by LDAP clients to request a change to be performed to the already existing database. This operation is used in combination with one of following : Add : inserts a new entry into the directory Delete : deletes an entry from the directory Replace : modifies an existing property value Example 1: Connecting to a LDAP Server A connection to a LDAP server is a two-step process, first we connect to a server but that connection is unauthenticated so we need to bind it to a set of credentials. The reason for breaking down the connection process into a two-step action allows us to reset the authorization state using the same connection. // Create a LdapConnection variable var connection = new LdapConnection(); // Connect to a server with a deafult port await connection.Connect(\"ldap.forumsys.com\", 389); // Set up the credentials await connection.Bind(\"cn=read-only-admin,dc=example,dc=com\", \"password\"); Example 2: Reading all the properties of an entry After establishing a connection you can use the connection's Read method to retrieve all properties of an entry // Get all properties of 'tesla' var properties = await connection.Read(\"uid=tesla,dc=example,dc=com\"); // After getting all properties from an entry select its email and print it properties.GetAttribute(\"mail\").StringValue.Info(); Example 3: Searching entries There are three scopes for searching entries : ScopeBase : searches only at the base dn ScopeOne : searches all entries one level under the specified dn ScopeSub : as mentioned above this allows to search entries at all levels // Retrieve all entries that have the specified email using ScopeSub // which searches all entries at all levels under and including the specified base DN var searchResult = await connection.Search(\"dc=example,dc=com\",LdapConnection.ScopeSub,\"(cn=Isaac Newton)\"); // If there are more entries remaining while (searchResult.HasMore()) { // Point to the next entry var entry = searchResult.Next(); // Get all attributes var entryAttributes = entry.GetAttributeSet(); // Select its email and print it entryAttributes.GetAttribute(\"cn\").StringValue.Info(); } Example 4: Modifying an entry attribute An easy way to deal with attributes modification is by calling the Modify method with a LdapModificationOp such as: Replace : overrides an attribute value. If the attribute does not exist it creates a new one If no value is passed the entire attribute is deleted Delete : deletes a value from an attribute. If no values are listed or if all of them are the entire attribute is removed Add : adds a new value to an attribute If the attribute does not exist a new one is created // Modify Tesla and sets its email as tesla@email.com connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Replace, \"mail\", \"tesla@email.com\") }); // Deletes the listed values from the given attribute connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Delete, \"mail\", \"tesla@email.com\") }); // Add back the recently deleted property connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Add, \"mail\", \"tesla@email.com\") }); // disconnect from the LDAP server connection.Disconnect();"
  },
  "api/Swan.Ldap.LdapException.html": {
    "href": "api/Swan.Ldap.LdapException.html",
    "title": "Class LdapException | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapException Thrown to indicate that an Ldap exception has occurred. This is a general exception which includes a message and an Ldap result code. An LdapException can result from physical problems (such as network errors) as well as problems with Ldap operations detected by the server. For example, if an Ldap add operation fails because of a duplicate entry, the server returns a result code. Inheritance Object Exception LdapException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax [Serializable] public class LdapException : Exception, ISerializable, _Exception Constructors LdapException(String, LdapStatusCode, String, String, Exception) Initializes a new instance of the LdapException class. Constructs an exception with a detailed message obtained from the specified MessageOrKey String. Additional parameters specify the result code, the message returned from the server, and a matchedDN returned from the server. The String is used either as a message key to obtain a localized message from ExceptionMessages, or if there is no key in the resource matching the text, it is used as the detailed message itself. Declaration public LdapException(string message, LdapStatusCode resultCode, string serverMsg = null, string matchedDN = null, Exception rootException = null) Parameters Type Name Description String message The message. LdapStatusCode resultCode The result code returned. String serverMsg Error message specifying additional information from the server. String matchedDN The maximal subset of a specified DN which could be matched by the server on a search operation. Exception rootException The root exception. Properties Cause Returns the lower level Exception which caused the failure, if any. For example, an IOException with additional information may be returned on a CONNECT_ERROR failure. Declaration public Exception Cause { get; } Property Value Type Description Exception The cause. LdapErrorMessage Returns the error message from the Ldap server, if this message is available (that is, if this message was set). If the message was not set, this method returns null. Declaration public string LdapErrorMessage { get; } Property Value Type Description String The error message or null if the message was not set. MatchedDN Returns the part of a submitted distinguished name which could be matched by the server. If the exception was caused by a local error, such as no server available, the return value is null. If the exception resulted from an operation being executed on a server, the value is an empty string except when the result of the operation was one of the following:. NO_SUCH_OBJECT ALIAS_PROBLEM INVALID_DN_SYNTAX ALIAS_DEREFERENCING_PROBLEM Declaration public string MatchedDN { get; } Property Value Type Description String The matched dn. Message Declaration public override string Message { get; } Property Value Type Description String Overrides Exception.Message ResultCode Returns the result code from the exception. The codes are defined as public final static int members of the Ldap Exception class. If the exception is a result of error information returned from a directory operation, the code will be one of those defined for the class. Otherwise, a local error code is returned. Declaration public LdapStatusCode ResultCode { get; } Property Value Type Description LdapStatusCode The result code. Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Exception.ToString() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapControl.html": {
    "href": "api/Swan.Ldap.LdapControl.html",
    "title": "Class LdapControl | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapControl Encapsulates optional additional parameters or constraints to be applied to an Ldap operation. When included with LdapConstraints or LdapSearchConstraints on an LdapConnection or with a specific operation request, it is sent to the server along with operation requests. Inheritance Object LdapControl Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapControl Constructors LdapControl(String, Boolean, SByte[]) Initializes a new instance of the LdapControl class. Constructs a new LdapControl object using the specified values. Declaration public LdapControl(string oid, bool critical, sbyte[] values) Parameters Type Name Description String oid The OID of the control, as a dotted string. Boolean critical True if the Ldap operation should be discarded if the control is not supported. False if the operation can be processed without the control. SByte [] values The control-specific data. Exceptions Type Condition ArgumentException An OID must be specified. Properties Critical Returns whether the control is critical for the operation. Declaration public bool Critical { get; } Property Value Type Description Boolean true if critical; otherwise, false . Id Returns the identifier of the control. Declaration public string Id { get; } Property Value Type Description String The identifier. Methods GetValue() Returns the control-specific data of the object. Declaration public sbyte[] GetValue() Returns Type Description SByte [] The control-specific data of the object as a byte array, or null if the control has no data. Register(String, Type) Registers a class to be instantiated on receipt of a control with the given OID. Any previous registration for the OID is overridden. The controlClass must be an extension of LdapControl. Declaration public static void Register(string oid, Type controlClass) Parameters Type Name Description String oid The object identifier of the control. Type controlClass A class which can instantiate an LdapControl. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapBindRequest.html": {
    "href": "api/Swan.Ldap.LdapBindRequest.html",
    "title": "Class LdapBindRequest | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapBindRequest Represents a simple bind request. Inheritance Object LdapMessage LdapBindRequest Inherited Members LdapMessage.MessageId LdapMessage.Request LdapMessage.Tag Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapBindRequest : LdapMessage Constructors LdapBindRequest(Int32, String, SByte[]) Initializes a new instance of the LdapBindRequest class. Constructs a simple bind request. Declaration public LdapBindRequest(int version, string dn, sbyte[] password) Parameters Type Name Description Int32 version The Ldap protocol version, use Ldap_V3. Ldap_V2 is not supported. String dn If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name. SByte [] password If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name and passwd as password. Properties AuthenticationDN Retrieves the Authentication DN for a bind request. Declaration public string AuthenticationDN { get; } Property Value Type Description String The authentication dn. Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides LdapMessage.ToString() See Also LdapMessage Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.html": {
    "href": "api/Swan.Ldap.html",
    "title": "Namespace Swan.Ldap | Unosquare SWAN LDAP Client",
    "keywords": "Namespace Swan.Ldap Classes LdapAttribute The name and values of one attribute of a directory entry. LdapAttribute objects are used when searching for, adding, modifying, and deleting attributes from the directory. LdapAttributes are often used in conjunction with an LdapAttributeSet when retrieving or adding multiple attributes to an entry. LdapAttributeSet A set of LdapAttribute objects. An LdapAttributeSet is a collection of LdapAttribute classes as returned from an LdapEntry on a search or read operation. LdapAttributeSet may be also used to construct an entry to be added to a directory. LdapBindRequest Represents a simple bind request. LdapConnection The central class that encapsulates the connection to a directory server through the Ldap protocol. LdapConnection objects are used to perform common Ldap operations such as search, modify and add. In addition, LdapConnection objects allow you to bind to an Ldap server, set connection and search constraints, and perform several other tasks. An LdapConnection object is not connected on construction and can only be connected to one server at one port. Based on https://github.com/dsbenghe/Novell.Directory.Ldap.NETStandard . LdapControl Encapsulates optional additional parameters or constraints to be applied to an Ldap operation. When included with LdapConstraints or LdapSearchConstraints on an LdapConnection or with a specific operation request, it is sent to the server along with operation requests. LdapEntry Represents a single entry in a directory, consisting of a distinguished name (DN) and zero or more attributes. An instance of LdapEntry is created in order to add an entry to a directory, and instances of LdapEntry are returned on a search by enumerating an LdapSearchResults. LdapException Thrown to indicate that an Ldap exception has occurred. This is a general exception which includes a message and an Ldap result code. An LdapException can result from physical problems (such as network errors) as well as problems with Ldap operations detected by the server. For example, if an Ldap add operation fails because of a duplicate entry, the server returns a result code. LdapMessage The base class for Ldap request and response messages. Subclassed by response messages used in asynchronous operations. LdapModification A single add, delete, or replace operation to an LdapAttribute. An LdapModification contains information on the type of modification being performed, the name of the attribute to be replaced, and the new value. Multiple modifications are expressed as an array of modifications, i.e., LdapModification[] . An LdapModification or an LdapModification array enable you to modify an attribute of an Ldap entry. The entire array of modifications must be performed by the server as a single atomic operation in the order they are listed. No changes are made to the directory unless all the operations succeed. If all succeed, a success result is returned to the application. It should be noted that if the connection fails during a modification, it is indeterminate whether the modification occurred or not. There are three types of modification operations: Add, Delete, and Replace. Add: Creates the attribute if it doesn't exist, and adds the specified values. This operation must contain at least one value, and all values of the attribute must be unique. Delete: Deletes specified values from the attribute. If no values are specified, or if all existing values of the attribute are specified, the attribute is removed. Mandatory attributes cannot be removed. Replace: Creates the attribute if necessary, and replaces all existing values of the attribute with the specified values. If you wish to keep any existing values of a multi-valued attribute, you must include these values in the replace operation. A replace operation with no value will remove the entire attribute if it exists, and is ignored if the attribute does not exist. Additional information on Ldap modifications is available in section 4.6 of. rfc2251.txt LdapModifyRequest Represents a LDAP Modification Request Message. LdapSearchResults An LdapSearchResults object is returned from a synchronous search operation. It provides access to all results received during the operation (entries and exceptions). Enums LdapModificationOp Ldap Modification Operators. LdapScope LDAP valid scopes. LdapStatusCode LDAP Connection Status Code. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapSearchResults.html": {
    "href": "api/Swan.Ldap.LdapSearchResults.html",
    "title": "Class LdapSearchResults | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapSearchResults An LdapSearchResults object is returned from a synchronous search operation. It provides access to all results received during the operation (entries and exceptions). Inheritance Object LdapSearchResults Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public sealed class LdapSearchResults Properties Count Returns a count of the items in the search result. Declaration public int Count { get; } Property Value Type Description Int32 The count. Methods HasMore() Reports if there are more search results. Declaration public bool HasMore() Returns Type Description Boolean true if there are more search results. Next() Returns the next result as an LdapEntry. Declaration public LdapEntry Next() Returns Type Description LdapEntry The next search result as an LdapEntry. Exceptions Type Condition ArgumentOutOfRangeException Next - No more results. See Also Search(String, LdapScope, String, String[], Boolean, CancellationToken) Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapModificationOp.html": {
    "href": "api/Swan.Ldap.LdapModificationOp.html",
    "title": "Enum LdapModificationOp | Unosquare SWAN LDAP Client",
    "keywords": "Enum LdapModificationOp Ldap Modification Operators. Namespace : Swan.Ldap Syntax public enum LdapModificationOp Fields Name Description Add Adds the listed values to the given attribute, creating the attribute if it does not already exist. Delete Deletes the listed values from the given attribute, removing the entire attribute (1) if no values are listed or (2) if all current values of the attribute are listed for deletion. Replace Replaces all existing values of the given attribute with the new values listed, creating the attribute if it does not already exist. A replace with no value deletes the entire attribute if it exists, and is ignored if the attribute does not exist. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapMessage.html": {
    "href": "api/Swan.Ldap.LdapMessage.html",
    "title": "Class LdapMessage | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapMessage The base class for Ldap request and response messages. Subclassed by response messages used in asynchronous operations. Inheritance Object LdapMessage LdapBindRequest LdapModification LdapModifyRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapMessage Properties MessageId Returns the message ID. The message ID is an integer value identifying the Ldap request and its response. Declaration public virtual int MessageId { get; } Property Value Type Description Int32 The message identifier. Request Indicates whether the message is a request or a response. Declaration public virtual bool Request { get; } Property Value Type Description Boolean true if request; otherwise, false . Tag Retrieves the identifier tag for this message. An identifier can be associated with a message with the setTag method. Tags are set by the application and not by the API or the server. If a server response isRequest() == false has no tag, the tag associated with the corresponding server request is used. Declaration public virtual string Tag { get; set; } Property Value Type Description String The tag. Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapEntry.html": {
    "href": "api/Swan.Ldap.LdapEntry.html",
    "title": "Class LdapEntry | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapEntry Represents a single entry in a directory, consisting of a distinguished name (DN) and zero or more attributes. An instance of LdapEntry is created in order to add an entry to a directory, and instances of LdapEntry are returned on a search by enumerating an LdapSearchResults. Inheritance Object LdapEntry Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapEntry Constructors LdapEntry(String, LdapAttributeSet) Initializes a new instance of the LdapEntry class. Constructs a new entry with the specified distinguished name and set of attributes. Declaration public LdapEntry(string dn = null, LdapAttributeSet attrs = null) Parameters Type Name Description String dn The distinguished name of the new entry. The value is not validated. An invalid distinguished name will cause operations using this entry to fail. LdapAttributeSet attrs The initial set of attributes assigned to the entry. Properties DN Returns the distinguished name of the entry. Declaration public string DN { get; } Property Value Type Description String The dn. Methods GetAttribute(String) Returns the attributes matching the specified attrName. Declaration public LdapAttribute GetAttribute(string attrName) Parameters Type Name Description String attrName The name of the attribute or attributes to return. Returns Type Description LdapAttribute The attribute matching the name. GetAttributeSet() Returns the attribute set of the entry. All base and subtype variants of all attributes are returned. The LdapAttributeSet returned may be empty if there are no attributes in the entry. Declaration public LdapAttributeSet GetAttributeSet() Returns Type Description LdapAttributeSet The attribute set of the entry. GetAttributeSet(String) Returns an attribute set from the entry, consisting of only those attributes matching the specified subtypes. The getAttributeSet method can be used to extract only a particular language variant subtype of each attribute, if it exists. The \"subtype\" may be, for example, \"lang-ja\", \"binary\", or \"lang-ja;phonetic\". If more than one subtype is specified, separated with a semicolon, only those attributes with all of the named subtypes will be returned. The LdapAttributeSet returned may be empty if there are no matching attributes in the entry. Declaration public LdapAttributeSet GetAttributeSet(string subtype) Parameters Type Name Description String subtype One or more subtype specification(s), separated with semicolons. The \"lang-ja\" and \"lang-en;phonetic\" are valid subtype specifications. Returns Type Description LdapAttributeSet An attribute set from the entry with the attributes that match the specified subtypes or an empty set if no attributes match. See Also LdapAttribute LdapAttributeSet Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapConnection.html": {
    "href": "api/Swan.Ldap.LdapConnection.html",
    "title": "Class LdapConnection | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapConnection The central class that encapsulates the connection to a directory server through the Ldap protocol. LdapConnection objects are used to perform common Ldap operations such as search, modify and add. In addition, LdapConnection objects allow you to bind to an Ldap server, set connection and search constraints, and perform several other tasks. An LdapConnection object is not connected on construction and can only be connected to one server at one port. Based on https://github.com/dsbenghe/Novell.Directory.Ldap.NETStandard . Inheritance Object LdapConnection Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public class LdapConnection : IDisposable Examples The following code describes how to use the LdapConnection class: class Example { using Swan; using Swan.Ldap; using System.Threading.Tasks; static async Task Main() { // create a LdapConnection object var connection = new LdapConnection(); // connect to a server await connection.Connect(\"ldap.forumsys.com\", 389); // set up the credentials await connection.Bind(\"cn=read-only-admin,dc=example,dc=com\", \"password\"); // retrieve all entries that have the specified email using ScopeSub // which searches all entries at all levels under // and including the specified base DN var searchResult = await connection .Search(\"dc=example,dc=com\", LdapConnection.ScopeSub, \"(cn=Isaac Newton)\"); // if there are more entries remaining keep going while (searchResult.HasMore()) { // point to the next entry var entry = searchResult.Next(); // get all attributes var entryAttributes = entry.GetAttributeSet(); // select its name and print it out entryAttributes.GetAttribute(\"cn\").StringValue.Info(); } // modify Tesla and sets its email as tesla@email.com connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Replace, \"mail\", \"tesla@email.com\") }); // delete the listed values from the given attribute connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Delete, \"mail\", \"tesla@email.com\") }); // add back the recently deleted property connection.Modify(\"uid=tesla,dc=example,dc=com\", new[] { new LdapModification(LdapModificationOp.Add, \"mail\", \"tesla@email.com\") }); // disconnect from the LDAP server connection.Disconnect(); Terminal.Flush(); } } Properties AuthenticationDn Returns the distinguished name (DN) used for as the bind name during the last successful bind operation. null is returned if no authentication has been performed or if the bind resulted in an anonymous connection. Declaration public string AuthenticationDn { get; } Property Value Type Description String The authentication dn. AuthenticationMethod Returns the method used to authenticate the connection. The return value is one of the following:. \"none\" indicates the connection is not authenticated. \"simple\" indicates simple authentication was used or that a null or empty authentication DN was specified. \"sasl\" indicates that a SASL mechanism was used to authenticate Declaration public string AuthenticationMethod { get; } Property Value Type Description String The authentication method. Connected Indicates whether the connection represented by this object is open at this time. Declaration public bool Connected { get; } Property Value Type Description Boolean True if connection is open; false if the connection is closed. ProtocolVersion Returns the protocol version uses to authenticate. 0 is returned if no authentication has been performed. Declaration public int ProtocolVersion { get; } Property Value Type Description Int32 The protocol version. Methods Bind(Int32, String, String) Synchronously authenticates to the Ldap server (that the object is currently connected to) using the specified name, password, Ldap version, and constraints. If the object has been disconnected from an Ldap server, this method attempts to reconnect to the server. If the object has already authenticated, the old authentication is discarded. Declaration public Task Bind(int version, string dn, string password) Parameters Type Name Description Int32 version The Ldap protocol version, use Ldap_V3. Ldap_V2 is not supported. String dn If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name. String password If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name and passwd as password. Note: the application should use care in the use of String password objects. These are long lived objects, and may expose a security risk, especially in objects that are serialized. The LdapConnection keeps no long lived instances of these objects. Returns Type Description Task A Task representing the asynchronous operation. Bind(String, String) Synchronously authenticates to the Ldap server (that the object is currently connected to) using the specified name, password, Ldap version, and constraints. If the object has been disconnected from an Ldap server, this method attempts to reconnect to the server. If the object has already authenticated, the old authentication is discarded. Declaration public Task Bind(string dn, string password) Parameters Type Name Description String dn If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name. String password If non-null and non-empty, specifies that the connection and all operations through it should be authenticated with dn as the distinguished name and password. Note: the application should use care in the use of String password objects. These are long lived objects, and may expose a security risk, especially in objects that are serialized. The LdapConnection keeps no long lived instances of these objects. Returns Type Description Task A Task representing the asynchronous operation. Connect(String, Int32) Connects to the specified host and port. If this LdapConnection object represents an open connection, the connection is closed first before the new connection is opened. At this point, there is no authentication, and any operations are conducted as an anonymous client. Declaration public Task Connect(string host, int port) Parameters Type Name Description String host A host name or a dotted string representing the IP address of a host running an Ldap server. Int32 port The TCP or UDP port number to connect to or contact. The default Ldap port is 389. Returns Type Description Task A Task representing the asynchronous operation. Disconnect() Synchronously disconnects from the Ldap server. Before the object can perform Ldap operations again, it must reconnect to the server by calling connect. The disconnect method abandons any outstanding requests, issues an unbind request to the server, and then closes the socket. Declaration public void Disconnect() Dispose() Declaration public void Dispose() Modify(String, LdapModification[], CancellationToken) Modifies the specified dn. Declaration public Task Modify(string distinguishedName, LdapModification[] mods, CancellationToken ct = default(CancellationToken)) Parameters Type Name Description String distinguishedName Name of the distinguished. LdapModification [] mods The mods. CancellationToken ct The cancellation token. Returns Type Description Task A Task representing the asynchronous operation. Exceptions Type Condition ArgumentNullException distinguishedName. Read(String, String[], CancellationToken) Synchronously reads the entry for the specified distinguished name (DN), using the specified constraints, and retrieves only the specified attributes from the entry. Declaration public Task<LdapEntry> Read(string dn, string[] attrs = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String dn The distinguished name of the entry to retrieve. String [] attrs The names of the attributes to retrieve. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < LdapEntry > the LdapEntry read from the server. Exceptions Type Condition LdapException Read response is ambiguous, multiple entries returned. Search(String, LdapScope, String, String[], Boolean, CancellationToken) Performs the search specified by the parameters, also allowing specification of constraints for the search (such as the maximum number of entries to find or the maximum time to wait for search results). Declaration public Task<LdapSearchResults> Search(string base, LdapScope scope, string filter = \"objectClass=*\", string[] attrs = null, bool typesOnly = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String base The base distinguished name to search from. LdapScope scope The scope of the entries to search. String filter The search filter specifying the search criteria. String [] attrs The names of attributes to retrieve. Boolean typesOnly If true, returns the names but not the values of the attributes found. If false, returns the names and values for attributes found. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < LdapSearchResults > A Task representing the asynchronous operation. Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapAttributeSet.html": {
    "href": "api/Swan.Ldap.LdapAttributeSet.html",
    "title": "Class LdapAttributeSet | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapAttributeSet A set of LdapAttribute objects. An LdapAttributeSet is a collection of LdapAttribute classes as returned from an LdapEntry on a search or read operation. LdapAttributeSet may be also used to construct an entry to be added to a directory. Inheritance Object Dictionary < String , LdapAttribute > LdapAttributeSet Implements IDictionary < String , LdapAttribute > ICollection < KeyValuePair < String , LdapAttribute >> IDictionary ICollection IReadOnlyDictionary < String , LdapAttribute > IReadOnlyCollection < KeyValuePair < String , LdapAttribute >> IEnumerable < KeyValuePair < String , LdapAttribute >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, LdapAttribute>.Add(String, LdapAttribute) System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.Add(System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>) System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>) System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>) Dictionary<String, LdapAttribute>.Clear() Dictionary<String, LdapAttribute>.ContainsKey(String) Dictionary<String, LdapAttribute>.ContainsValue(LdapAttribute) Dictionary<String, LdapAttribute>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.GetEnumerator() Dictionary<String, LdapAttribute>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, LdapAttribute>.OnDeserialization(Object) Dictionary<String, LdapAttribute>.Remove(String) Dictionary<String, LdapAttribute>.TryGetValue(String, LdapAttribute) System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>[], System.Int32) Dictionary<String, LdapAttribute>.ICollection.CopyTo(Array, Int32) Dictionary<String, LdapAttribute>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, LdapAttribute>.IDictionary.Add(Object, Object) Dictionary<String, LdapAttribute>.IDictionary.Contains(Object) Dictionary<String, LdapAttribute>.IDictionary.GetEnumerator() Dictionary<String, LdapAttribute>.IDictionary.Remove(Object) Dictionary<String, LdapAttribute>.Comparer Dictionary<String, LdapAttribute>.Count Dictionary<String, LdapAttribute>.Keys System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.IDictionary<System.String, Swan.Ldap.LdapAttribute>.Keys System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.IReadOnlyDictionary<System.String, Swan.Ldap.LdapAttribute>.Keys Dictionary<String, LdapAttribute>.Values System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.IDictionary<System.String, Swan.Ldap.LdapAttribute>.Values System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.IReadOnlyDictionary<System.String, Swan.Ldap.LdapAttribute>.Values Dictionary<String, LdapAttribute>.Item[String] System.Collections.Generic.Dictionary<System.String, Swan.Ldap.LdapAttribute>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Swan.Ldap.LdapAttribute>>.IsReadOnly Dictionary<String, LdapAttribute>.ICollection.IsSynchronized Dictionary<String, LdapAttribute>.ICollection.SyncRoot Dictionary<String, LdapAttribute>.IDictionary.IsFixedSize Dictionary<String, LdapAttribute>.IDictionary.IsReadOnly Dictionary<String, LdapAttribute>.IDictionary.Keys Dictionary<String, LdapAttribute>.IDictionary.Values Dictionary<String, LdapAttribute>.IDictionary.Item[Object] Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax [Serializable] public class LdapAttributeSet : Dictionary<string, LdapAttribute>, IDictionary<string, LdapAttribute>, ICollection<KeyValuePair<string, LdapAttribute>>, IDictionary, ICollection, IReadOnlyDictionary<string, LdapAttribute>, IReadOnlyCollection<KeyValuePair<string, LdapAttribute>>, IEnumerable<KeyValuePair<string, LdapAttribute>>, IEnumerable, ISerializable, IDeserializationCallback Constructors LdapAttributeSet() Initializes a new instance of the LdapAttributeSet class. Declaration public LdapAttributeSet() Methods Add(LdapAttribute) Adds the specified attribute to this set if it is not already present. If an attribute with the same name already exists in the set then the specified attribute will not be added. Declaration public bool Add(LdapAttribute attr) Parameters Type Name Description LdapAttribute attr Object of type LdapAttribute . Returns Type Description Boolean true if the attribute was added. Contains(Object) Returns true if this set contains an attribute of the same name as the specified attribute. Declaration public bool Contains(object attr) Parameters Type Name Description Object attr Object of type LdapAttribute . Returns Type Description Boolean true if this set contains the specified attribute. GetSubset(String) Creates a new attribute set containing only the attributes that have the specified subtypes. For example, suppose an attribute set contains the following attributes: cn cn;lang-ja sn;phonetic;lang-ja sn;lang-us Calling the getSubset method and passing lang-ja as the argument, the method returns an attribute set containing the following attributes:. cn;lang-ja sn;phonetic;lang-ja Declaration public LdapAttributeSet GetSubset(string subtype) Parameters Type Name Description String subtype Semi-colon delimited list of subtypes to include. For example: \"lang-ja\" specifies only Japanese language subtypes \"binary\" specifies only binary subtypes \"binary;lang-ja\" specifies only Japanese language subtypes which also are binary Note: Novell eDirectory does not currently support language subtypes. It does support the \"binary\" subtype. Returns Type Description LdapAttributeSet An attribute set containing the attributes that match the specified subtype. Remove(LdapAttribute) Removes the specified object from this set if it is present. If the specified object is of type LdapAttribute , the specified attribute will be removed. If the specified object is of type string, the attribute with a name that matches the string will be removed. Declaration public bool Remove(LdapAttribute entry) Parameters Type Name Description LdapAttribute entry The entry. Returns Type Description Boolean true if the object was removed. ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback See Also LdapAttribute LdapEntry Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapStatusCode.html": {
    "href": "api/Swan.Ldap.LdapStatusCode.html",
    "title": "Enum LdapStatusCode | Unosquare SWAN LDAP Client",
    "keywords": "Enum LdapStatusCode LDAP Connection Status Code. Namespace : Swan.Ldap Syntax public enum LdapStatusCode Fields Name Description AdminLimitExceeded Indicates that an Ldap server limit set by an administrative authority has been exceeded. ADMIN_LIMIT_EXCEEDED = 11 AffectsMultipleDsas Indicates that the modify DN operation moves the entry from one Ldap server to another and thus requires more than one Ldap server. AFFECTS_MULTIPLE_DSAS = 71 AliasDereferencingProblem Indicates that during a search operation, either the client does not have access rights to read the aliased object's name or dereferencing is not allowed. ALIAS_DEREFERENCING_PROBLEM = 36 AliasProblem Indicates that an error occurred when an alias was dereferenced. ALIAS_PROBLEM = 33 AmbiguousResponse Indicates that the server response to a request is ambiguous. AMBIGUOUS_RESPONSE = 101 AttributeOrValueExists Indicates that the attribute value specified in a modify or add operation already exists as a value for that attribute. ATTRIBUTE_OR_VALUE_EXISTS = 20 AuthMethodNotSupported Indicates that during a bind operation the client requested an authentication method not supported by the Ldap server. AUTH_METHOD_NOT_SUPPORTED = 7 AuthUnknown Indicates that a bind method was called with an unknown authentication method. AUTH_UNKNOWN = 86 Busy Indicates that the Ldap server is too busy to process the client request at this time, but if the client waits and resubmits the request, the server may be able to process it then. BUSY = 51 ClientLoop Indicates the Ldap libraries detected a loop. Usually this happens when following referrals. CLIENT_LOOP = 96 CompareFalse Does not indicate an error condition. Indicates that the results of a compare operation are false. COMPARE_FALSE = 5 CompareTrue Does not indicate an error condition. Indicates that the results of a compare operation are true. COMPARE_TRUE = 6 ConfidentialityRequired Indicates that the session is not protected by a protocol such as Transport Layer Security (TLS), which provides session confidentiality. CONFIDENTIALITY_REQUIRED = 13 ConnectError Indicates that the Ldap client has lost either its connection or cannot establish a connection to the Ldap server. CONNECT_ERROR = 91 ConstraintViolation Indicates that the attribute value specified in a modify, add, or modify DN operation violates constraints placed on the attribute. The constraint can be one of size or content (for example, string only, no binary data). CONSTRAINT_VIOLATION = 19 ControlNotFound Indicates that the client requested a control that the libraries cannot find in the list of supported controls sent by the Ldap server. CONTROL_NOT_FOUND = 93 DecodingError Indicates that the Ldap client encountered errors when decoding an Ldap response from the Ldap server. DECODING_ERROR = 84 EncodingError Indicates that the Ldap client encountered errors when encoding an Ldap request intended for the Ldap server. ENCODING_ERROR = 83 EntryAlreadyExists Indicates that the add operation attempted to add an entry that already exists, or that the modify operation attempted to rename an entry to the name of an entry that already exists. ENTRY_ALREADY_EXISTS = 68 FilterError Indicates that the search method was called with an invalid search filter. FILTER_ERROR = 87 InappropriateAuthentication Indicates that during a bind operation, the client is attempting to use an authentication method that the client cannot use correctly. For example, either of the following cause this error: The client returns simple credentials when strong credentials are required. The client returns a DN and a password for a simple bind when the entry does not have a password defined. INAPPROPRIATE_AUTHENTICATION = 48 InappropriateMatching Indicates that the matching rule specified in the search filter does not match a rule defined for the attribute's syntax. INAPPROPRIATE_MATCHING = 18 InsufficientAccessRights Indicates that the caller does not have sufficient rights to perform the requested operation. INSUFFICIENT_ACCESS_RIGHTS = 50 InvalidAttributeSyntax Indicates that the attribute value specified in an add, compare, or modify operation is an unrecognized or invalid syntax for the attribute. INVALID_ATTRIBUTE_SYNTAX = 21 InvalidCredentials Indicates that invalid information was passed during a bind operation. One of the following occurred: The client passed either an incorrect DN or password. The password is incorrect because it has expired, intruder detection has locked the account, or some other similar reason. INVALID_CREDENTIALS = 49 InvalidDnSyntax Indicates that the syntax of the DN is incorrect. If the DN syntax is correct, but the Ldap server's structure rules do not permit the operation, the server returns Ldap_UNWILLING_TO_PERFORM. INVALID_DN_SYNTAX = 34 InvalidResponse Indicates that the server response to a request is invalid. INVALID_RESPONSE = 100 IsLeaf Indicates that the specified operation cannot be performed on a leaf entry. This code is not currently in the Ldap specifications, but is reserved for this constant. IS_LEAF = 35 LdapNotSupported Indicates that the requested functionality is not supported by the client. For example, if the Ldap client is established as an Ldapv2 client, the libraries set this error code when the client requests Ldapv3 functionality. Ldap_NOT_SUPPORTED = 92 LdapPartialResults Returned by some Ldap servers to Ldapv2 clients to indicate that a referral has been returned in the error string. Ldap_PARTIAL_RESULTS = 9 LdapTimeout Indicates that the time limit of the Ldap client was exceeded while waiting for a result. Ldap_TIMEOUT = 85 LocalError Indicates that the Ldap client has an error. This is usually a failed dynamic memory allocation error. LOCAL_ERROR = 82 LoopDetect Indicates that the client discovered an alias or referral loop, and is thus unable to complete this request. LOOP_DETECT = 54 MoreResultsToReturn Indicates that more results are chained in the result message. MORE_RESULTS_TO_RETURN = 95 NamingViolation Indicates that the add or modify DN operation violates the schema's structure rules. For example, The request places the entry subordinate to an alias. The request places the entry subordinate to a container that is forbidden by the containment rules. The RDN for the entry uses a forbidden attribute type. NAMING_VIOLATION = 64 NoMemory Indicates that a dynamic memory allocation method failed when calling an Ldap method. NO_MEMORY = 90 NoResultsReturned Indicates that the Ldap server sent no results. NO_RESULTS_RETURNED = 94 NoSuchAttribute Indicates that the attribute specified in the modify or compare operation does not exist in the entry. NO_SUCH_ATTRIBUTE = 16 NoSuchObject Indicates the target object cannot be found. This code is not returned on the following operations: Search operations that find the search base but cannot find any entries that match the search filter. Bind operations. NO_SUCH_OBJECT = 32 NotAllowedOnNonleaf Indicates that the requested operation is permitted only on leaf entries. For example, the following types of requests return this error: The client requests a delete operation on a parent entry. The client request a modify DN operation on a parent entry. NOT_ALLOWED_ON_NONLEAF = 66 NotAllowedOnRdn Indicates that the modify operation attempted to remove an attribute value that forms the entry's relative distinguished name. NOT_ALLOWED_ON_RDN = 67 ObjectClassModsProhibited Indicates that the modify operation attempted to modify the structure rules of an object class. OBJECT_CLASS_MODS_PROHIBITED = 69 ObjectClassViolation Indicates that the add, modify, or modify DN operation violates the object class rules for the entry. For example, the following types of request return this error: The add or modify operation tries to add an entry without a value for a required attribute. The add or modify operation tries to add an entry with a value for an attribute which the class definition does not contain. The modify operation tries to remove a required attribute without removing the auxiliary class that defines the attribute as required. OBJECT_CLASS_VIOLATION = 65 OperationsError Indicates an internal error. The server is unable to respond with a more specific error and is also unable to properly respond to a request. It does not indicate that the client has sent an erroneous message. OPERATIONS_ERROR = 1 Other Indicates an unknown error condition. OTHER = 80 ProtocolError Indicates that the server has received an invalid or malformed request from the client. PROTOCOL_ERROR = 2 Referral Does not indicate an error condition. In Ldapv3, indicates that the server does not hold the target entry of the request, but that the servers in the referral field may. REFERRAL = 10 ReferralLimitExceeded Indicates that the referral exceeds the hop limit. The default hop limit is ten. The hop limit determines how many servers the client can hop through to retrieve data. For example, suppose the following conditions: Suppose the hop limit is two. If the referral is to server D which can be contacted only through server B (1 hop) which contacts server C (2 hops) which contacts server D (3 hops). With these conditions, the hop limit is exceeded and the Ldap libraries set this code. REFERRAL_LIMIT_EXCEEDED = 97 SaslBindInProgress Does not indicate an error condition, but indicates that the server is ready for the next step in the process. The client must send the server the same SASL mechanism to continue the process. SASL_BIND_IN_PROGRESS = 14 ServerDown Indicates that the Ldap libraries cannot establish an initial connection with the Ldap server. Either the Ldap server is down or the specified host name or port number is incorrect. SERVER_DOWN = 81 SizeLimitExceeded Indicates that in a search operation, the size limit specified by the client or the server has been exceeded. Incomplete results are returned. SIZE_LIMIT_EXCEEDED = 4 SslHandshakeFailed Indicates that SSL Handshake could not succeed. SSL_HANDSHAKE_FAILED = 113 SslProviderNotFound Indicates that SSL Provider could not be found. SSL_PROVIDER_NOT_FOUND = 114 StrongAuthRequired Indicates a problem with the level of authentication. One of the following has occurred: In bind requests, the Ldap server accepts only strong authentication. In a client request, the client requested an operation such as delete that requires strong authentication. In an unsolicited notice of disconnection, the Ldap server discovers the security protecting the communication between the client and server has unexpectedly failed or been compromised. STRONG_AUTH_REQUIRED = 8 Success Indicates the requested client operation completed successfully. SUCCESS = 0 TimeLimitExceeded Indicates that the operation's time limit specified by either the client or the server has been exceeded. On search operations, incomplete results are returned. TIME_LIMIT_EXCEEDED = 3 TlsNotSupported Indicates that TLS is not supported on the server. TLS_NOT_SUPPORTED = 112 Unavailable Indicates that the Ldap server cannot process the client's bind request, usually because it is shutting down. UNAVAILABLE = 52 UnavailableCriticalExtension Indicates that the Ldap server was unable to satisfy a request because one or more critical extensions were not available. Either the server does not support the control or the control is not appropriate for the operation type. UNAVAILABLE_CRITICAL_EXTENSION = 12 UndefinedAttributeType Indicates that the attribute specified in the modify or add operation does not exist in the Ldap server's schema. UNDEFINED_ATTRIBUTE_TYPE = 17 UnwillingToPerform Indicates that the Ldap server cannot process the request because of server-defined restrictions. This error is returned for the following reasons: The add entry request violates the server's structure rules. The modify attribute request specifies attributes that users cannot modify. UNWILLING_TO_PERFORM = 53 UserCancelled Indicates that the user cancelled the Ldap operation. USER_CANCELLED = 88 Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapScope.html": {
    "href": "api/Swan.Ldap.LdapScope.html",
    "title": "Enum LdapScope | Unosquare SWAN LDAP Client",
    "keywords": "Enum LdapScope LDAP valid scopes. Namespace : Swan.Ldap Syntax public enum LdapScope Fields Name Description ScopeBase Used with search to specify that the scope of entrys to search is to search only the base object. ScopeOne Used with search to specify that the scope of entrys to search is to search only the immediate subordinates of the base object. ScopeSub Used with search to specify that the scope of entrys to search is to search the base object and all entries within its subtree. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapModifyRequest.html": {
    "href": "api/Swan.Ldap.LdapModifyRequest.html",
    "title": "Class LdapModifyRequest | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapModifyRequest Represents a LDAP Modification Request Message. Inheritance Object LdapMessage LdapModifyRequest Inherited Members LdapMessage.MessageId LdapMessage.Request LdapMessage.Tag Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public sealed class LdapModifyRequest : LdapMessage Constructors LdapModifyRequest(String, LdapModification[], LdapControl[]) Initializes a new instance of the LdapModifyRequest class. Declaration public LdapModifyRequest(string dn, LdapModification[] modifications, LdapControl[] control) Parameters Type Name Description String dn The dn. LdapModification [] modifications The modifications. LdapControl [] control The control. Properties DN Gets the dn. Declaration public string DN { get; } Property Value Type Description String The dn. Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides LdapMessage.ToString() See Also LdapMessage Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Swan.Ldap.LdapModification.html": {
    "href": "api/Swan.Ldap.LdapModification.html",
    "title": "Class LdapModification | Unosquare SWAN LDAP Client",
    "keywords": "Class LdapModification A single add, delete, or replace operation to an LdapAttribute. An LdapModification contains information on the type of modification being performed, the name of the attribute to be replaced, and the new value. Multiple modifications are expressed as an array of modifications, i.e., LdapModification[] . An LdapModification or an LdapModification array enable you to modify an attribute of an Ldap entry. The entire array of modifications must be performed by the server as a single atomic operation in the order they are listed. No changes are made to the directory unless all the operations succeed. If all succeed, a success result is returned to the application. It should be noted that if the connection fails during a modification, it is indeterminate whether the modification occurred or not. There are three types of modification operations: Add, Delete, and Replace. Add: Creates the attribute if it doesn't exist, and adds the specified values. This operation must contain at least one value, and all values of the attribute must be unique. Delete: Deletes specified values from the attribute. If no values are specified, or if all existing values of the attribute are specified, the attribute is removed. Mandatory attributes cannot be removed. Replace: Creates the attribute if necessary, and replaces all existing values of the attribute with the specified values. If you wish to keep any existing values of a multi-valued attribute, you must include these values in the replace operation. A replace operation with no value will remove the entire attribute if it exists, and is ignored if the attribute does not exist. Additional information on Ldap modifications is available in section 4.6 of. rfc2251.txt Inheritance Object LdapMessage LdapModification Inherited Members LdapMessage.MessageId LdapMessage.Request LdapMessage.Tag LdapMessage.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Swan.Ldap Syntax public sealed class LdapModification : LdapMessage Constructors LdapModification(LdapModificationOp, LdapAttribute) Initializes a new instance of the LdapModification class. Specifies a modification to be made to an attribute. Declaration public LdapModification(LdapModificationOp op, LdapAttribute attr) Parameters Type Name Description LdapModificationOp op The op. LdapAttribute attr The attribute to modify. LdapModification(LdapModificationOp, String, String) Initializes a new instance of the LdapModification class. Declaration public LdapModification(LdapModificationOp op, string attrName, string attrValue) Parameters Type Name Description LdapModificationOp op The op. String attrName Name of the attribute. String attrValue The attribute value. Properties Attribute Returns the attribute to modify, with any existing values. Declaration public LdapAttribute Attribute { get; } Property Value Type Description LdapAttribute The attribute. Op Returns the type of modification specified by this object. Declaration public LdapModificationOp Op { get; } Property Value Type Description LdapModificationOp The op. See Also Modify(String, LdapModification[], CancellationToken) LdapAttribute Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}